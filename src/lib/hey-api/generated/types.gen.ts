// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'https://start-ui-web-restart.vercel.app/api/rest' | (string & {});
};

export type AccountSubmitOnboardingData = {
    body: {
        name: string;
    };
    path?: never;
    query?: never;
    url: '/account/submit-onboarding';
};

export type AccountSubmitOnboardingResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type AccountUpdateInfoData = {
    body: {
        name?: '' | null | string;
    };
    path?: never;
    query?: never;
    url: '/account/info';
};

export type AccountUpdateInfoResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type BookGetAllData = {
    body?: never;
    path?: never;
    query?: {
        cursor?: string;
        limit?: number;
        searchTerm?: string;
    };
    url: '/books';
};

export type BookGetAllResponses = {
    /**
     * OK
     */
    200: {
        items: Array<{
            id: string;
            title: string;
            author: string;
            genre?: null | {
                id: string;
                name: string;
                color: string;
                createdAt: string;
                updatedAt: string;
            };
            publisher?: unknown | null | string;
            createdAt: string;
            updatedAt: string;
        }>;
        nextCursor?: string;
        total: number;
    };
};

export type BookGetAllResponse = BookGetAllResponses[keyof BookGetAllResponses];

export type BookCreateData = {
    body: {
        title: string;
        author: string;
        publisher?: '' | null | string;
        genreId: string;
    };
    path?: never;
    query?: never;
    url: '/books';
};

export type BookCreateResponses = {
    /**
     * OK
     */
    200: {
        id: string;
        title: string;
        author: string;
        genre?: null | {
            id: string;
            name: string;
            color: string;
            createdAt: string;
            updatedAt: string;
        };
        publisher?: unknown | null | string;
        createdAt: string;
        updatedAt: string;
    };
};

export type BookCreateResponse = BookCreateResponses[keyof BookCreateResponses];

export type BookDeleteByIdData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/books/{id}';
};

export type BookDeleteByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type BookGetByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/books/{id}';
};

export type BookGetByIdResponses = {
    /**
     * OK
     */
    200: {
        id: string;
        title: string;
        author: string;
        genre?: null | {
            id: string;
            name: string;
            color: string;
            createdAt: string;
            updatedAt: string;
        };
        publisher?: unknown | null | string;
        createdAt: string;
        updatedAt: string;
    };
};

export type BookGetByIdResponse = BookGetByIdResponses[keyof BookGetByIdResponses];

export type BookUpdateByIdData = {
    body: {
        title: string;
        author: string;
        publisher?: '' | null | string;
        genreId: string;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/books/{id}';
};

export type BookUpdateByIdResponses = {
    /**
     * OK
     */
    200: {
        id: string;
        title: string;
        author: string;
        genre?: null | {
            id: string;
            name: string;
            color: string;
            createdAt: string;
            updatedAt: string;
        };
        publisher?: unknown | null | string;
        createdAt: string;
        updatedAt: string;
    };
};

export type BookUpdateByIdResponse = BookUpdateByIdResponses[keyof BookUpdateByIdResponses];

export type GenreGetAllData = {
    body?: never;
    path?: never;
    query?: {
        cursor?: string;
        limit?: number;
        searchTerm?: string;
    };
    url: '/genres';
};

export type GenreGetAllResponses = {
    /**
     * OK
     */
    200: {
        items: Array<{
            id: string;
            name: string;
            color: string;
            createdAt: string;
            updatedAt: string;
        }>;
        nextCursor?: string;
        total: number;
    };
};

export type GenreGetAllResponse = GenreGetAllResponses[keyof GenreGetAllResponses];

export type UserGetAllData = {
    body?: never;
    path?: never;
    query?: {
        cursor?: string;
        limit?: number;
        searchTerm?: string;
    };
    url: '/users';
};

export type UserGetAllResponses = {
    /**
     * OK
     */
    200: {
        items: Array<{
            id: string;
            name?: unknown | null | string;
            email: string;
            emailVerified: boolean;
            role?: null | 'admin' | 'user';
            image?: null | string;
            createdAt: string;
            updatedAt: string;
            onboardedAt?: null | string;
        }>;
        nextCursor?: string;
        total: number;
    };
};

export type UserGetAllResponse = UserGetAllResponses[keyof UserGetAllResponses];

export type UserCreateData = {
    body: {
        name?: '' | null | string;
        email: string;
        role?: null | 'admin' | 'user';
    };
    path?: never;
    query?: never;
    url: '/users';
};

export type UserCreateResponses = {
    /**
     * OK
     */
    200: {
        id: string;
        name?: unknown | null | string;
        email: string;
        emailVerified: boolean;
        role?: null | 'admin' | 'user';
        image?: null | string;
        createdAt: string;
        updatedAt: string;
        onboardedAt?: null | string;
    };
};

export type UserCreateResponse = UserCreateResponses[keyof UserCreateResponses];

export type UserDeleteByIdData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UserDeleteByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type UserGetByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UserGetByIdResponses = {
    /**
     * OK
     */
    200: {
        id: string;
        name?: unknown | null | string;
        email: string;
        emailVerified: boolean;
        role?: null | 'admin' | 'user';
        image?: null | string;
        createdAt: string;
        updatedAt: string;
        onboardedAt?: null | string;
    };
};

export type UserGetByIdResponse = UserGetByIdResponses[keyof UserGetByIdResponses];

export type UserUpdateByIdData = {
    body: {
        name?: '' | null | string;
        email: string;
        role?: null | 'admin' | 'user';
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UserUpdateByIdResponses = {
    /**
     * OK
     */
    200: {
        id: string;
        name?: unknown | null | string;
        email: string;
        emailVerified: boolean;
        role?: null | 'admin' | 'user';
        image?: null | string;
        createdAt: string;
        updatedAt: string;
        onboardedAt?: null | string;
    };
};

export type UserUpdateByIdResponse = UserUpdateByIdResponses[keyof UserUpdateByIdResponses];

export type UserGetUserSessionsData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: {
        cursor?: string;
        limit?: number;
    };
    url: '/users/{userId}/sessions';
};

export type UserGetUserSessionsResponses = {
    /**
     * OK
     */
    200: {
        items: Array<{
            id: string;
            token: string;
            createdAt: string;
            updatedAt: string;
            expiresAt: string;
        }>;
        nextCursor?: string;
        total: number;
    };
};

export type UserGetUserSessionsResponse = UserGetUserSessionsResponses[keyof UserGetUserSessionsResponses];

export type UserRevokeUserSessionsData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}/sessions/revoke';
};

export type UserRevokeUserSessionsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type UserRevokeUserSessionData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        id: string;
        sessionToken: string;
    };
    query?: never;
    url: '/users/{id}/sessions/{sessionToken}/revoke';
};

export type UserRevokeUserSessionResponses = {
    /**
     * OK
     */
    200: unknown;
};
